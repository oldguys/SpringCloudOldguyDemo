<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.oldguy.modules.test1.dao.jpas.Test1EntityMapper">

    <sql id="table_name">test_1_entity</sql>

    <sql id="all_entity_columns">
 	 ${prefix}.test_1,
	 ${prefix}.creator_id,
	 ${prefix}.creator_name,
	 ${prefix}.updater_id,
	 ${prefix}.updater_name,
	 ${prefix}.update_time,
	 ${prefix}.id,
	 ${prefix}.create_time,
	 ${prefix}.is_deleted
	 </sql>

    <select id="findByPage" resultType="Test1Entity">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/> a
        <where>
            <if test="form.isDeleted != null">
                AND a.is_deleted = #{form.isDeleted}
            </if>
            <if test="form.startTime != null ">
                AND a.create_time &gt; #{form.startTime}
            </if>
            <if test="form.endTime != null ">
                AND a.create_time &lt; #{form.endTime}
            </if>
        </where>
        <choose>
            <when test="form.sort != null and form.sort == 1">
                ORDER BY a.create_time DESC
            </when>
            <when test="form.sort != null and form.sort == 0">
                ORDER BY a.create_time ASC
            </when>
            <otherwise>
                ORDER BY a.create_time DESC
            </otherwise>
        </choose>
    </select>


    <select id="findOne" parameterType="string" resultType="Test1Entity">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/>
        a
        WHERE
        id = #{id}
    </select>

    <select id="findAll" parameterType="int" resultType="Test1Entity">
        SELECT
        <include refid="all_entity_columns">
            <property name="prefix" value="a"/>
        </include>
        FROM
        <include refid="table_name"/> a
        <where>
            <choose>
                <when test="isDeleted != null">
                    a.is_deleted = #{isDeleted}
                </when>
            </choose>
        </where>
    </select>

    <update id="update" parameterType="Test1Entity">
        UPDATE
        <include refid="table_name"/>
        SET
        
 	 test_1 = #{test1},
	 creator_id = #{creatorId},
	 creator_name = #{creatorName},
	 updater_id = #{updaterId},
	 updater_name = #{updaterName},
	 update_time = #{updateTime},
	 is_deleted = #{isDeleted}
	 
        WHERE
        id = #{id}
    </update>

    <update id="updateBatch" >
        <foreach collection="collection" item="item" separator=";">
            UPDATE
            <include refid="table_name"/>
            SET
            
 	 test_1 = #{item.test1},
	 creator_id = #{item.creatorId},
	 creator_name = #{item.creatorName},
	 updater_id = #{item.updaterId},
	 updater_name = #{item.updaterName},
	 update_time = #{item.updateTime},
	 is_deleted = #{item.isDeleted}
	 
            WHERE
            id = #{item.id}
        </foreach>
    </update>

    <update id="updateDeleted">
        UPDATE
        <include refid="table_name"/>
        SET
        is_deleted = #{isDeleted}
        WHERE
        id = #{id}
    </update>

    <insert id="save" keyProperty="id" useGeneratedKeys="true" parameterType="Test1Entity">
        INSERT
        <include refid="table_name"/>
        (
 	 test_1,
	 creator_id,
	 creator_name,
	 updater_id,
	 updater_name,
	 update_time,
	 id,
	 create_time,
	 is_deleted
	 )
        VALUES
        (
 	 #{test1},
	 #{creatorId},
	 #{creatorName},
	 #{updaterId},
	 #{updaterName},
	 #{updateTime},
	 #{id},
	 #{createTime},
	 #{isDeleted}
	 )
    </insert>

    <insert id="saveBatch" keyProperty="id" useGeneratedKeys="true" parameterType="Test1Entity">
        INSERT
        <include refid="table_name"/>
        (
 	 test_1,
	 creator_id,
	 creator_name,
	 updater_id,
	 updater_name,
	 update_time,
	 id,
	 create_time,
	 is_deleted
	 )
        VALUES
        <foreach collection="collections" item="item" separator=",">
        (
 		 #{item.test1},
		 #{item.creatorId},
		 #{item.creatorName},
		 #{item.updaterId},
		 #{item.updaterName},
		 #{item.updateTime},
		 #{item.id},
		 #{item.createTime},
		 #{item.isDeleted}
	 )
        </foreach>
    </insert>
</mapper>